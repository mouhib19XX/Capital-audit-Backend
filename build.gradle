plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.sonarqube' version '4.0.0.2929' // Apply SonarQube plugin
    id("com.jfrog.artifactory") version "5.+"
  
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
        maven {
            url "http://127.0.0.1:8082/artifactory/libs-release/"
        }
    }


apply plugin: 'com.jfrog.artifactory'
apply plugin: 'java'
apply plugin: 'maven-publish'
    


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    testImplementation(platform('org.junit:junit-bom:5.10.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
    


}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
tasks.named('test') {
    useJUnitPlatform()
}

// SonarQube configuration
sonarqube {
    properties {
        property 'sonar.sources', 'src/main/java/com/example/capitalauditbackend'
        property 'sonar.tests', 'src/test/java/com/example/capitalauditbackend'
        property 'sonar.java.binaries', 'build/classes/java/main'
        property 'sonar.java.test.binaries', 'build/classes/java/test'
        property 'sonar.junit.reportPaths', 'build/test-results/test'
        property 'sonar.jacoco.reportPaths', 'build/jacoco/test.exec'
    }
}
artifactory {
    contextUrl = 'http://127.0.0.1:8082/artifactory'
    publish {
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = "admin" // The publisher user name
            password = "Admin123" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}
